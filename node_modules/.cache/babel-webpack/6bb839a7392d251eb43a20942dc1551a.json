{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Phang Jay Sern/Downloads/permit-to-work/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/Service/signal-rhub-service.service\";\nexport let ForminfoComponent = /*#__PURE__*/(() => {\n  class ForminfoComponent {\n    //constructor(x:number);\n    // constructor(id?:any, name?:any, selectedPermitType?:any, isWorkAtHeight?:any, selectedLocationOfWork?:any,\n    //   startDate?:any,endDate?:any)\n    constructor(id, name, selectedPermitType, isWorkAtHeight, selectedLocationOfWork, startDate, endDate, signalrhubservice) {\n      this.signalrhubservice = signalrhubservice;\n      this.id = id;\n      this.name = name;\n      this.selectedPermitType = selectedPermitType;\n      this.isWorkAtHeight = isWorkAtHeight;\n      this.selectedLocationOfWork = selectedLocationOfWork;\n      this.startDate = startDate;\n      this.endDate = endDate;\n    } //This type is not supported as injection token.\n\n\n    receiveDataFromServer(id) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        var _a;\n\n        yield (_a = _this.signalrhubservice) === null || _a === void 0 ? void 0 : _a.hubConnection.invoke(\"sendDataFrmServer\", id).finally(() => {\n          console.log(\"Calling sendDataFrmServer() from server\");\n        }).catch(err => console.error(err));\n      })();\n    }\n\n    listenDataFromServer() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        var _a;\n\n        yield (_a = _this2.signalrhubservice) === null || _a === void 0 ? void 0 : _a.hubConnection.on(\"responseDataFrmServer\", formInfo => {\n          _this2.id = formInfo.id;\n          _this2.name = formInfo.name;\n          _this2.selectedPermitType = formInfo.selectedPermitType;\n          _this2.isWorkAtHeight = formInfo.isWorkAtHeight;\n          _this2.selectedLocationOfWork = formInfo.selectedLocationOfWork;\n          _this2.startDate = formInfo.startDate;\n          _this2.endDate = formInfo.endDate;\n        }).then(result => {\n          console.log(result);\n          let forminfo = new ForminfoComponent();\n          forminfo = result;\n        }); //call getFormInfo if this console.log has no issue.\n      })();\n    }\n\n    getFormInfo(id) {\n      let formValue;\n      return formValue;\n    }\n\n    forminfotest() {\n      console.log(\"Testing\");\n    } //Migrated from forminfo.component to request-Proposal.component\n    // public async sendDataFromClient(formInfo:ForminfoComponent)\n    // {\n    //   await this.signalrhubservice?.hubConnection.invoke(\"receiveDataFrmClient\",formInfo).finally(()=>\n    //   {\n    //     console.log(\"Calling receiveDataFrmClient()from server\")\n    //   })\n    //   .catch((err:any) => console.error(err));\n    // }\n\n\n    setFormInfo(input) {\n      let formValue;\n      return formValue = input;\n    }\n\n  }\n\n  ForminfoComponent.ɵfac = function ForminfoComponent_Factory(t) {\n    return new (t || ForminfoComponent)(i0.ɵɵdirectiveInject(Number), i0.ɵɵdirectiveInject(String), i0.ɵɵdirectiveInject(String), i0.ɵɵdirectiveInject(Boolean), i0.ɵɵdirectiveInject(String), i0.ɵɵdirectiveInject(Date), i0.ɵɵdirectiveInject(Date), i0.ɵɵdirectiveInject(i1.SignalRHubServiceService));\n  };\n\n  ForminfoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForminfoComponent,\n    selectors: [[\"app-forminfo\"]],\n    decls: 2,\n    vars: 0,\n    template: function ForminfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"forminfo works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\"]\n  });\n  return ForminfoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}