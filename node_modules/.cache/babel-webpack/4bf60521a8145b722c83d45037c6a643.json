{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Phang Jay Sern/Downloads/permit-to-work/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar ForminfoComponent_1;\nimport { __decorate, __param } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ForminfoComponent = ForminfoComponent_1 = class ForminfoComponent {\n  constructor(id, name, selectedPermitType, isWorkAtHeight, selectedLocationOfWork, startDate, endDate, signalrhubservice) {\n    this.signalrhubservice = signalrhubservice;\n    this.id = id;\n    this.name = name;\n    this.selectedPermitType = selectedPermitType;\n    this.isWorkAtHeight = isWorkAtHeight;\n    this.selectedLocationOfWork = selectedLocationOfWork;\n    this.startDate = startDate;\n    this.endDate = endDate;\n  } //This type is not supported as injection token.\n\n\n  receiveDataFromServer(id) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      yield (_a = _this.signalrhubservice) === null || _a === void 0 ? void 0 : _a.hubConnection.invoke(\"sendDataFrmServer\", id).finally(() => {\n        console.log(\"Calling sendDataFrmServer() from server\");\n      }).catch(err => console.error(err));\n    })();\n  }\n\n  listenDataFromServer() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      yield (_a = _this2.signalrhubservice) === null || _a === void 0 ? void 0 : _a.hubConnection.on(\"responseDataFrmServer\", formInfo => {\n        _this2.id = formInfo.id;\n        _this2.name = formInfo.name;\n        _this2.selectedPermitType = formInfo.selectedPermitType;\n        _this2.isWorkAtHeight = formInfo.isWorkAtHeight;\n        _this2.selectedLocationOfWork = formInfo.selectedLocationOfWork;\n        _this2.startDate = formInfo.startDate;\n        _this2.endDate = formInfo.endDate;\n      }).then(result => {\n        console.log(result);\n        let forminfo = new ForminfoComponent_1();\n        forminfo = result;\n      }); //call getFormInfo if this console.log has no issue.\n    })();\n  }\n\n  getFormInfo(id) {\n    let formValue;\n    return formValue;\n  }\n\n  sendDataFromClient(formInfo) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      yield (_a = _this3.signalrhubservice) === null || _a === void 0 ? void 0 : _a.hubConnection.invoke(\"receiveDataFrmServer\", formInfo).finally(() => {\n        console.log(\"Calling receiveDataFrmServer()from server\");\n      }).then(() => {\n        console.log(\"successfully called receiveDataFrmServer()\");\n      }).catch(err => console.error(err));\n    })();\n  }\n\n  setFormInfo(input) {\n    let formValue;\n    return formValue = input;\n  }\n\n};\nForminfoComponent = ForminfoComponent_1 = __decorate([Component({\n  selector: 'app-forminfo',\n  templateUrl: './forminfo.component.html',\n  styleUrls: ['./forminfo.component.scss']\n}), __param(7, Inject(String))], ForminfoComponent);\nexport { ForminfoComponent };","map":{"version":3,"sources":["C:/Users/Phang Jay Sern/Downloads/permit-to-work/src/app/forminfo/forminfo.component.ts"],"names":["ForminfoComponent_1","__decorate","__param","Component","ForminfoComponent","constructor","id","name","selectedPermitType","isWorkAtHeight","selectedLocationOfWork","startDate","endDate","signalrhubservice","receiveDataFromServer","_a","hubConnection","invoke","finally","console","log","catch","err","error","listenDataFromServer","on","formInfo","then","result","forminfo","getFormInfo","formValue","sendDataFromClient","setFormInfo","input","selector","templateUrl","styleUrls","Inject","String"],"mappings":"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","sourcesContent":["var ForminfoComponent_1;\r\nimport { __decorate, __param } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nlet ForminfoComponent = ForminfoComponent_1 = class ForminfoComponent {\r\n    constructor(id, name, selectedPermitType, isWorkAtHeight, selectedLocationOfWork, startDate, endDate, signalrhubservice) {\r\n        this.signalrhubservice = signalrhubservice;\r\n        this.id = id;\r\n        this.name = name;\r\n        this.selectedPermitType = selectedPermitType;\r\n        this.isWorkAtHeight = isWorkAtHeight;\r\n        this.selectedLocationOfWork = selectedLocationOfWork;\r\n        this.startDate = startDate;\r\n        this.endDate = endDate;\r\n    }\r\n    //This type is not supported as injection token.\r\n    async receiveDataFromServer(id) {\r\n        var _a;\r\n        await ((_a = this.signalrhubservice) === null || _a === void 0 ? void 0 : _a.hubConnection.invoke(\"sendDataFrmServer\", id).finally(() => {\r\n            console.log(\"Calling sendDataFrmServer() from server\");\r\n        }).catch((err) => console.error(err)));\r\n    }\r\n    async listenDataFromServer() {\r\n        var _a;\r\n        await ((_a = this.signalrhubservice) === null || _a === void 0 ? void 0 : _a.hubConnection.on(\"responseDataFrmServer\", (formInfo) => {\r\n            this.id = formInfo.id;\r\n            this.name = formInfo.name;\r\n            this.selectedPermitType = formInfo.selectedPermitType;\r\n            this.isWorkAtHeight = formInfo.isWorkAtHeight;\r\n            this.selectedLocationOfWork = formInfo.selectedLocationOfWork;\r\n            this.startDate = formInfo.startDate;\r\n            this.endDate = formInfo.endDate;\r\n        }).then((result) => {\r\n            console.log(result);\r\n            let forminfo = new ForminfoComponent_1();\r\n            forminfo = result;\r\n        })); //call getFormInfo if this console.log has no issue.\r\n    }\r\n    getFormInfo(id) {\r\n        let formValue;\r\n        return formValue;\r\n    }\r\n    async sendDataFromClient(formInfo) {\r\n        var _a;\r\n        await ((_a = this.signalrhubservice) === null || _a === void 0 ? void 0 : _a.hubConnection.invoke(\"receiveDataFrmServer\", formInfo).finally(() => {\r\n            console.log(\"Calling receiveDataFrmServer()from server\");\r\n        }).then(() => { console.log(\"successfully called receiveDataFrmServer()\"); }).catch((err) => console.error(err)));\r\n    }\r\n    setFormInfo(input) {\r\n        let formValue;\r\n        return formValue = input;\r\n    }\r\n};\r\nForminfoComponent = ForminfoComponent_1 = __decorate([\r\n    Component({\r\n        selector: 'app-forminfo',\r\n        templateUrl: './forminfo.component.html',\r\n        styleUrls: ['./forminfo.component.scss']\r\n    }),\r\n    __param(7, Inject(String))\r\n], ForminfoComponent);\r\nexport { ForminfoComponent };\r\n"]},"metadata":{},"sourceType":"module"}